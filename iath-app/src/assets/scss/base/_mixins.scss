// MEDIA QUERIES
@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    +"Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/// TINT : Slightly lighten a color * color: tint(#BADA55, 42%);
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// SHADE : Slightly darken a color * shade: tint(#BADA55, 42%);
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

// BUTTON MIXIN
$Placeholder-Selectors: ();

@mixin button($color, $extend: true) {
  @include button-static($extend);
  background: $color;
  border-color: $color;
  color: $white;

  &:hover {
    background: shade($color, 35%);
    border-color: shade($color, 20%);
    color: shade($white, 15%);
  }

  &:active,
  &:focus {
    background: shade($color, 40%);
    border-color: shade($color, 40%);
    outline: none;
    box-shadow: 0 0 0 3px rgba($color, 0.25), 0 0 0 1.5px rgba($color, 0.25);
  }
}

@mixin button-static($extend: true) {
  $button-selector: map-get($Placeholder-Selectors, 'button');

  @if $extend==true {
    @if $button-selector==null {
      $button-selector: unique-id();
      $Placeholder-Selectors: map-merge($Placeholder-Selectors,
        ('button': $button-selector)) !global;

      @at-root %#{$button-selector} {
        @include button-static(false);
      }
    }

    @extend %#{$button-selector};
  }

  @else {
    appearance: none;
    border: 1px solid transparent;
    border-radius: 1px;
    display: inline-block;
    font-size: 0.8rem;
    font-weight: 500;
    letter-spacing: 2px;
    line-height: 1.25;
    margin: 0 ($spacer*.25) ($spacer*.25) 0;
    padding: ($spacer*.5) $spacer;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    transition: background 250ms ease-in-out, transform 150ms ease, color 100ms ease;
    vertical-align: text-bottom;
    white-space: nowrap;

    &:hover {
      cursor: pointer;
      transform: scale(1.025);
    }

    &:active,
    &:focus {
      transform: scale(0.98);
    }
  }
}

@mixin chevron($color: '#000000', $rotation: 0, $tickness: 10) {
  background-image:
    url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path style="fill:'+$color+';" d="M0 50l50,50 50,-50 -'+$tickness+', -'+$tickness+' -'+(50-$tickness)+','+(50-$tickness)+' -'+(50-$tickness)+',-'+(50-$tickness)+'z" transform="rotate('+$rotation+' 50 50 )"/></svg>');
}
